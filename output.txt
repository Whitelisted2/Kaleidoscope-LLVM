; ModuleID = 'my cool jit'
source_filename = "my cool jit"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

declare double @putchard(double)

define double @printchar(double %x) !dbg !4 {
entry:
  %x1 = alloca double
  call void @llvm.dbg.declare(metadata double* %x1, metadata !9, metadata !DIExpression()), !dbg !10
  store double %x, double* %x1
  %x2 = load double, double* %x1, !dbg !11
  %cmptmp = fcmp ult double %x2, 1.000000e+01, !dbg !12
  %booltmp = uitofp i1 %cmptmp to double, !dbg !12
  %ifcond = fcmp one double %booltmp, 0.000000e+00, !dbg !12
  br i1 %ifcond, label %then, label %else, !dbg !12

then:                                             ; preds = %entry
  %calltmp = call double @putchard(double 4.300000e+01), !dbg !13
  br label %ifcont, !dbg !13

else:                                             ; preds = %entry
  %calltmp3 = call double @putchard(double 4.200000e+01), !dbg !14
  br label %ifcont, !dbg !14

ifcont:                                           ; preds = %else, %then
  %iftmp = phi double [ %calltmp, %then ], [ %calltmp3, %else ], !dbg !14
  ret double %iftmp, !dbg !14
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

define double @__anon_expr() !dbg !15 {
entry:
  %calltmp = call double @printchar(double 1.000000e+00), !dbg !18
  ret double %calltmp, !dbg !18

entry1:                                           ; No predecessors!
  %calltmp2 = call double @printchar(double 9.000000e+00), !dbg !20
  ret double %calltmp2, !dbg !20

entry3:                                           ; No predecessors!
  %calltmp4 = call double @printchar(double 1.000000e+01), !dbg !22
  ret double %calltmp4, !dbg !22

entry5:                                           ; No predecessors!
  %calltmp6 = call double @printchar(double 0x402400014F8B588E), !dbg !24
  ret double %calltmp6, !dbg !24

entry7:                                           ; No predecessors!
  %calltmp8 = call double @printstar(double 1.000000e+02), !dbg !26
  ret double %calltmp8, !dbg !26

entry9:                                           ; No predecessors!
  %calltmp10 = call double @fib(double 1.000000e+01), !dbg !28
  ret double %calltmp10, !dbg !28
}

define double @printstar(double %n) !dbg !29 {
entry:
  %i = alloca double
  %n1 = alloca double
  call void @llvm.dbg.declare(metadata double* %n1, metadata !31, metadata !DIExpression()), !dbg !32
  store double %n, double* %n1
  store double 1.000000e+00, double* %i, !dbg !33
  br label %loop, !dbg !33

loop:                                             ; preds = %loop, %entry
  %calltmp = call double @putchard(double 4.200000e+01), !dbg !34
  %i2 = load double, double* %i, !dbg !35
  %n3 = load double, double* %n1, !dbg !36
  %cmptmp = fcmp ult double %i2, %n3, !dbg !36
  %booltmp = uitofp i1 %cmptmp to double, !dbg !36
  %i4 = load double, double* %i, !dbg !36
  %nextvar = fadd double %i4, 1.000000e+00, !dbg !36
  store double %nextvar, double* %i, !dbg !36
  %loopcond = fcmp one double %booltmp, 0.000000e+00, !dbg !36
  br i1 %loopcond, label %loop, label %afterloop, !dbg !36

afterloop:                                        ; preds = %loop
  ret double 0.000000e+00, !dbg !36
}

define double @fib(double %x) !dbg !37 {
entry:
  %x1 = alloca double
  call void @llvm.dbg.declare(metadata double* %x1, metadata !39, metadata !DIExpression()), !dbg !40
  store double %x, double* %x1
  %x2 = load double, double* %x1, !dbg !41
  %cmptmp = fcmp ult double %x2, 3.000000e+00, !dbg !42
  %booltmp = uitofp i1 %cmptmp to double, !dbg !42
  %ifcond = fcmp one double %booltmp, 0.000000e+00, !dbg !42
  br i1 %ifcond, label %then, label %else, !dbg !42

then:                                             ; preds = %entry
  br label %ifcont, !dbg !43

else:                                             ; preds = %entry
  %x3 = load double, double* %x1, !dbg !44
  %subtmp = fsub double %x3, 1.000000e+00, !dbg !45
  %calltmp = call double @fib(double %subtmp), !dbg !45
  %x4 = load double, double* %x1, !dbg !46
  %subtmp5 = fsub double %x4, 2.000000e+00, !dbg !47
  %calltmp6 = call double @fib(double %subtmp5), !dbg !47
  %addtmp = fadd double %calltmp, %calltmp6, !dbg !47
  br label %ifcont, !dbg !47

ifcont:                                           ; preds = %else, %then
  %iftmp = phi double [ 1.000000e+00, %then ], [ %addtmp, %else ], !dbg !47
  ret double %iftmp, !dbg !47
}

attributes #0 = { nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "Kaleidoscope Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3)
!2 = !DIFile(filename: "fib.ks", directory: ".")
!3 = !{}
!4 = distinct !DISubprogram(name: "printchar", scope: !2, file: !2, line: 5, type: !5, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !8)
!5 = !DISubroutineType(types: !6)
!6 = !{!7, !7}
!7 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!8 = !{!9}
!9 = !DILocalVariable(name: "x", arg: 1, scope: !4, file: !2, line: 5, type: !7)
!10 = !DILocation(line: 5, scope: !4)
!11 = !DILocation(line: 7, column: 6, scope: !4)
!12 = !DILocation(line: 7, column: 10, scope: !4)
!13 = !DILocation(line: 9, column: 14, scope: !4)
!14 = !DILocation(line: 13, column: 14, scope: !4)
!15 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 55, type: !16, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!16 = !DISubroutineType(types: !17)
!17 = !{!7}
!18 = !DILocation(line: 17, column: 11, scope: !19)
!19 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 17, type: !16, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!20 = !DILocation(line: 19, column: 11, scope: !21)
!21 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 19, type: !16, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!22 = !DILocation(line: 21, column: 11, scope: !23)
!23 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 21, type: !16, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!24 = !DILocation(line: 23, column: 11, scope: !25)
!25 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 23, type: !16, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!26 = !DILocation(line: 37, column: 11, scope: !27)
!27 = distinct !DISubprogram(name: "__anon_expr", scope: !2, file: !2, line: 37, type: !16, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !3)
!28 = !DILocation(line: 55, column: 5, scope: !15)
!29 = distinct !DISubprogram(name: "printstar", scope: !2, file: !2, line: 27, type: !5, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !30)
!30 = !{!31}
!31 = !DILocalVariable(name: "n", arg: 1, scope: !29, file: !2, line: 27, type: !7)
!32 = !DILocation(line: 27, scope: !29)
!33 = !DILocation(line: 29, column: 11, scope: !29)
!34 = !DILocation(line: 31, column: 14, scope: !29)
!35 = !DILocation(line: 29, column: 14, scope: !29)
!36 = !DILocation(line: 29, column: 18, scope: !29)
!37 = distinct !DISubprogram(name: "fib", scope: !2, file: !2, line: 43, type: !5, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !38)
!38 = !{!39}
!39 = !DILocalVariable(name: "x", arg: 1, scope: !37, file: !2, line: 43, type: !7)
!40 = !DILocation(line: 43, scope: !37)
!41 = !DILocation(line: 45, column: 7, scope: !37)
!42 = !DILocation(line: 45, column: 11, scope: !37)
!43 = !DILocation(line: 47, column: 5, scope: !37)
!44 = !DILocation(line: 51, column: 9, scope: !37)
!45 = !DILocation(line: 51, column: 11, scope: !37)
!46 = !DILocation(line: 51, column: 18, scope: !37)
!47 = !DILocation(line: 51, column: 20, scope: !37)
